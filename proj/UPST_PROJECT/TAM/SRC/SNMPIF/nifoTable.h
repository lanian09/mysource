/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.array-user.conf,v 5.18.2.2 2004/02/09 18:21:47 rstory Exp $
 *
 * $Id: nifoTable.h,v 1.1 2011/08/31 11:24:19 hhbaek Exp $
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef NIFOTABLE_H
#define NIFOTABLE_H

#ifdef __cplusplus
extern          "C" {
#endif


#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

        /** Index nifoIndex is internal */

    typedef struct nifoTable_context_s {
        netsnmp_index   index;
                         /** THIS MUST BE FIRST!!! */

    /*************************************************************
     * You can store data internally in this structure.
     *
     * TODO: You will probably have to fix a few types here...
     */
        /** INTEGER32 = ASN_INTEGER */
        long            nifoIndex;

        /** OCTETSTR = ASN_OCTET_STR */
        unsigned char   nifoSystem[65535];
        long            nifoSystem_len;

        /** INTEGER32 = ASN_INTEGER */
        long            nifoTotal;

        /** INTEGER32 = ASN_INTEGER */
        long            nifoAvail;

        /** INTEGER32 = ASN_INTEGER */
        long            nifoUsed;

        /** INTEGER32 = ASN_INTEGER */
        long            nifoUsage;


        /*
         * OR
         *
         * Keep a pointer to your data
         */
        void           *data;

        /*
         *add anything else you want here
         */

    } nifoTable_context;

/*************************************************************
 * function declarations
 */
    void            init_nifoTable(void);
    void            initialize_table_nifoTable(void);
    const nifoTable_context *nifoTable_get_by_idx(netsnmp_index *);
    const nifoTable_context *nifoTable_get_by_idx_rs(netsnmp_index *,
                                                   int row_status);
    int             nifoTable_get_value(netsnmp_request_info *,
                                       netsnmp_index *,
                                       netsnmp_table_request_info *);


/*************************************************************
 * oid declarations
 */
    extern oid      nifoTable_oid[];
    extern size_t   nifoTable_oid_len;

#define nifoTable_TABLE_OID 1,3,6,1,4,1,28795,2,13

/*************************************************************
 * column number definitions for table nifoTable
 */
#define COLUMN_QUEINDEX 1
#define COLUMN_QUESYSTEM 2
#define COLUMN_QUETOTAL 3
#define COLUMN_QUEAVAIL 4
#define COLUMN_QUEUSED 5
#define COLUMN_QUEUSAGE 6
#define nifoTable_COL_MIN 1
#define nifoTable_COL_MAX 6

    /*
     * comment out the following line if you don't handle SET-REQUEST for nifoTable
     */
#define nifoTable_SET_HANDLING

    /*
     * comment out the following line if you can't create new rows
     */
#define nifoTable_ROW_CREATION

    /*
     * comment out the following line if you don't want the secondary index
     */
#define nifoTable_IDX2

#ifdef nifoTable_SET_HANDLING

    int             nifoTable_extract_index(nifoTable_context * ctx,
                                           netsnmp_index * hdr);

    void            nifoTable_set_reserve1(netsnmp_request_group *);
    void            nifoTable_set_reserve2(netsnmp_request_group *);
    void            nifoTable_set_action(netsnmp_request_group *);
    void            nifoTable_set_commit(netsnmp_request_group *);
    void            nifoTable_set_free(netsnmp_request_group *);
    void            nifoTable_set_undo(netsnmp_request_group *);

    nifoTable_context *nifoTable_duplicate_row(nifoTable_context *);
    netsnmp_index  *nifoTable_delete_row(nifoTable_context *);

    int             nifoTable_can_delete(nifoTable_context * undo_ctx,
                                        nifoTable_context * row_ctx,
                                        netsnmp_request_group * rg);


#ifdef nifoTable_ROW_CREATION
    nifoTable_context *nifoTable_create_row(netsnmp_index *);
#endif
#endif

#ifdef nifoTable_IDX2
    nifoTable_context *nifoTable_get(const char *name, int len);
#endif

#ifdef __cplusplus
};
#endif

#endif /** NIFOTABLE_H */
